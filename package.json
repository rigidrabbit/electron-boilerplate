{
  "name": "electron-boilerplate",
  "version": "0.9.0",
  "license": "MIT",
  "private": true,
  "author": "@rigidrabbit",
  "bugs": {
    "url": "https://github.com/rigidrabbit/electron-boilerplate/issues"
  },
  "description": "This is an electron application boilerplate just for myself.",
  "dependencies": {
    "@babel/polyfill": "^7.11.5",
    "bootstrap": "^4.5.2",
    "classnames": "^2.2.6",
    "core-decorators": "^0.20.0",
    "electron": "^10.1.3",
    "electron-store": "^6.0.0",
    "fanc": "^1.1.0",
    "lodash": "^4.17.20",
    "prop-types": "^15.7.2",
    "react": "^16.13.1",
    "react-bootstrap": "^1.3.0",
    "react-dom": "^16.13.1",
    "react-event-listener": "^0.6.6",
    "react-redux": "^7.2.1",
    "redux": "^4.0.5"
  },
  "devDependencies": {
    "@babel/cli": "^7.11.6",
    "@babel/core": "^7.11.6",
    "@babel/eslint-parser": "^7.11.5",
    "@babel/plugin-proposal-class-properties": "^7.10.4",
    "@babel/plugin-proposal-decorators": "^7.10.5",
    "@babel/plugin-proposal-object-rest-spread": "^7.11.0",
    "@babel/plugin-transform-modules-commonjs": "^7.10.4",
    "@babel/plugin-transform-object-assign": "^7.10.4",
    "@babel/preset-env": "^7.11.5",
    "@babel/preset-react": "^7.10.4",
    "@babel/register": "^7.11.5",
    "autoprefixer": "^10.0.1",
    "babel-loader": "^8.1.0",
    "css-loader": "^4.3.0",
    "cssnano": "^4.1.10",
    "electron-packager": "^15.1.0",
    "eslint": "^7.10.0",
    "eslint-config-airbnb": "^18.2.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jsx-a11y": "^6.3.1",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-react": "^7.21.2",
    "gulp": "^4.0.2",
    "gulp-autoprefixer": "^7.0.1",
    "gulp-babel": "^8.0.0",
    "gulp-clean-css": "^4.3.0",
    "gulp-plumber": "^1.2.1",
    "gulp-sass": "^4.1.0",
    "gulp-sourcemaps": "^2.6.5",
    "gulp-util": "^3.0.8",
    "style-loader": "^1.2.1",
    "stylelint": "^13.7.2",
    "stylelint-config-standard": "^20.0.0",
    "stylelint-order": "^4.1.0",
    "terser": "^5.3.3",
    "terser-webpack-plugin": "^4.2.2",
    "webpack": "^4.44.2",
    "webpack-cli": "^3.3.12",
    "webpack-merge": "^5.1.4"
  },
  "scripts": {
    "start": "cd publish && electron .",
    "clean": "\\rm -f publish/*.js publish/*.js.LICENSE.txt publish/*.css publish/*.map `\\find src/js -type f -name '*.js' -or -name '*.map'`",
    "distclean": "npm run clean && \\rm -rf sampleapp-darwin-*/ sampleapp-win32-*/",
    "build": "npm run clean && npm run gulp:sass && npm run webpack:main && npm run webpack:preload && npm run webpack:renderer",
    "build:d": "npm run clean && npm run gulp:sass && npm run webpack:main:d && npm run webpack:preload:d && npm run webpack:renderer:d",
    "gulp:sass": "gulp sass",
    "gulp:babel": "gulp babel",
    "webpack:renderer": "NODE_ENV=production APPCONF=./webpack-renderer.js webpack --mode production",
    "webpack:renderer:d": "NODE_ENV=development APPCONF=./webpack-renderer.js webpack --mode development",
    "webpack:renderer:w": "NODE_ENV=development APPCONF=./webpack-renderer.js webpack --mode development -w --debug",
    "webpack:preload": "NODE_ENV=production APPCONF=./webpack-preload.js webpack --mode production",
    "webpack:preload:d": "NODE_ENV=development APPCONF=./webpack-preload.js webpack --mode development",
    "webpack:preload:w": "NODE_ENV=development APPCONF=./webpack-preload.js webpack --mode development -w --debug",
    "webpack:main": "NODE_ENV=production APPCONF=./webpack-main.js webpack --mode production",
    "webpack:main:d": "NODE_ENV=development APPCONF=./webpack-main.js webpack --mode development",
    "webpack:main:w": "NODE_ENV=development APPCONF=./webpack-main.js webpack --mode development -w --debug",
    "lint": "npm run lint:js && npm run lint:css",
    "lint:fix": "npm run lint:js:fix && npm run lint:css:fix",
    "lint:js": "eslint '*.{js,jsx}' './src/**/*.{js,jsx}'; exit 0",
    "lint:js:fix": "eslint --fix '*.{js,jsx}' './src/**/*.{js,jsx}'; exit 0",
    "lint:css": "stylelint './src/**/*.{css,scss}'; exit 0",
    "lint:css:fix": "stylelint --fix './src/**/*.{css,scss}'; exit 0",
    "package:darwin": "electron-packager publish sampleapp --overwrite --platform=darwin --arch=x64",
    "package:win32": "electron-packager publish sampleapp --overwrite --platform=win32 --arch=x64"
  },
  "browserslist": [
    "Chrome >= 80"
  ]
}
